#!/bin/sh
# Refs:
# - https://gist.github.com/master-atul/59559fe18db69623aae7692c5481cfce
# - https://gist.github.com/motleytech/88aaa0e574864dbc9915593ac2257f3a

bin=/usr/local/jamf/bin
cd "$bin"

ensure() {
    [ ! -e "jamf.fake" ] && echo "#!/bin/sh" > jamf.fake || echo "jamf.fake exists"
    [ ! -e "jamfAgent.fake" ] && echo "#!/bin/sh" > jamfAgent.fake || echo "jamfAgent.fake exists"
    [ ! -e "jamf.ori" ] && cp jamf jamf.ori
    [ ! -e "jamfAgent.ori" ] && cp jamfAgent jamfAgent.ori
    mod *.fake
}

jmf_disable() {
    enforceRoot
    echo "disabling jamf..."
    ensure
    echo "" > /Library/Application\ Support/JAMF/.blacklist.xml
    jamf flushCaches -verbose
    launchctl unload /Library/LaunchDaemons/com.jamf.management.daemon.plist
    killall jamf jamfAgent
    ln -sf "$bin/jamf.fake" "$bin/jamf"
    ln -sf "$bin/jamfAgent.fake" "$bin/jamfAgent"
    mod jamf jamfAgent
    echo "ok"
}

jmf_enable() {
    enforceRoot
    ensure
    echo "enabling jamf..."
    killall jamf jamfAgent
    ln -sf "$bin/jamf.ori" "$bin/jamf"
    ln -sf "$bin/jamfAgent.ori" "$bin/jamfAgent"
    mod jamf jamfAgent
    launchctl load /Library/LaunchDaemons/com.jamf.management.daemon.plist
    jamf manage
    echo "ok"
}

mod() {
    chown root:wheel "$@"
    chmod 555 "$@"
}

enforceRoot() {
    if whoami | grep -vq "root"; then
        echo "must run this command as root"
        exit 1
    fi
}

case "$1" in
    enable)     jmf_enable ;;
    disable)    jmf_disable ;;
    *)          echo "Usage: sudo jmf enable|disable"; exit 1 ;;
esac
