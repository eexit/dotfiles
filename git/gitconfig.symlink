# Local/private config goes in the include
[include]
        path = ~/.gitconfig.local
[hub]
        protocol = https
[alias] # Thanks to https://gist.github.com/pksunkara/988716
        a = add
        au = add --update
        ai = add --interactive
        aui = add --update --interactive
        ap = add --patch
        aup = add --update --patch
        #############
        f = fetch
        fp = fetch --prune
        fpt = fetch --prune origin +refs/tags/*:refs/tags/*
        fo = fetch origin
        fu = fetch upstream
        #############
        ps = push
        psf = push --force-with-lease
        psff = push --force
        psu = push -u
        pso = push origin
        psfo = push --force-with-lease origin
        psffo = push --force origin
        psuo = push -u origin
        #############
        pl = pull
        pb = pull --rebase
        pbo = pull --rebase origin
        pbu = pull --rebase upstream
        #############
        rb = rebase
        rba = rebase --abort
        rbc = rebase --continue
        rbi = rebase --interactive
        rbs = rebase --skip
        #############
        s = status
        sb = status -sb
        #############
        sa = stash apply
        sc = stash clear
        sl = stash list
        sp = stash pop
        ss = stash save
        sw = stash show
        swn = "!f() { git stash show stash^{/$*} -p; }; f"
        san = "!f() { git stash apply stash^{/$*}; }; f"
        #############
        c = commit
        ca = commit -a
        cm = commit -m
        cam = commit -am
        cd = commit --amend
        cde = commit --amend --no-edit
        #############
        co = checkout
        cob = checkout -b
        cop = checkout -p
        com = checkout master
        #############
        b = branch
        ba = branch -a
        bd = branch -d
        br = branch -r
        #############
        cp = cherry-pick
        cpn = cherry-pick -n
        cpe = cherry-pick -e
        #############
        l = log --oneline -20
        lg = log --pretty=format:'%C(cyan)%h%Creset %cr | %s%d [%C(yellow)%an%Creset]' --graph --abbrev-commit --date=relative -n50
        #############
        d = diff
        dw = diff --color-words=. -w
        dc = diff --cached
        dp = "!git diff | /usr/bin/pbcopy"
        #############
        ls = ls-files
        lsf = "!git ls-files | grep -i"
        #############
        unstage = reset HEAD --
        undo = reset HEAD~1
        aliases = config --get-regexp alias
        promote = !$ZSH/bin/git-promote
        wtf = !$ZSH/bin/git-wtf
        rank-contributors = !$ZSH/bin/git-rank-contributors
        count = !git shortlog -sn
        cbn = copy-branch-name
        t = !sh -c 'git tag $1 && git push origin $1' -
        deltag = !sh -c 'git tag -d $1 && git push origin :refs/tags/$1' -
        cleanup = "!git branch --merged | grep -v '*' | xargs -n 1 git branch -d"
[color]
        diff = auto
        status = auto
        branch = auto
        ui = true
        interactive = auto
[color "branch"]
        current = green bold
        local = yellow bold
        remote = red bold
[color "diff"]
        meta = yellow bold
        frag = magenta bold
        old = red bold
        new = green bold
[color "status"]
        added = green bold
        changed = yellow bold
        unmerged = red bold
        untracked = magenta bold
[core]
        excludesfile = ~/.gitignore
        safecrlf = true
        autocrlf = input
        editor = subl -w
        ; gitProxy="ssh" for "github.com"
        ; gitProxy=default-proxy ; for the rest
        pager = less -r
[apply]
        whitespace = nowarn
[mergetool]
        keepBackup = false
[merge]
        tool = opendiff
[difftool]
        prompt = false
[help]
        autocorrect = 1
[push]
        default = current
[pull]
        default = current
        rebase = false
[receive]
        denyDeleteCurrent = warn
[url "git@github.com:"]
        insteadOf = https://github.com/
[filter "lfs"]
        clean = git-lfs clean -- %f
        smudge = git-lfs smudge -- %f
        process = git-lfs filter-process
        required = true
